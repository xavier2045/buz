<template>
  <div class="app-container">
    <div class="blur-container">
      <!-- 启动页面 -->
      <div class="start-page" v-if="currentPage === 'start'">
        <div class="header">
          <h1>AETRIX开启您的IP发布</h1>
          <p class="subtitle-zh">选择您要进行的操作</p>
        </div>
        
        <div class="menu-options">
          <div class="menu-card" data-text="发布作品" @click="goToWorkType()">
            <div class="menu-icon product-icon"></div>
          </div>
          
          <div class="menu-card" data-text="发布任务" @click="showUnavailable('task')">
            <div class="menu-icon task-icon"></div>
          </div>
          
          <div class="menu-card" data-text="发布活动" @click="showUnavailable('activity')">
            <div class="menu-icon people-icon"></div>
          </div>
        </div>
      </div>

      <!-- 作品类型选择页面 -->
      <div class="work-type-container" v-if="currentPage === 'workType'">
        <!-- 标题部分 -->
        <div class="header">
          <h1 class="title-with-subtitle">选择作品类型（注册类型）</h1>
          <p class="subtitle-zh">请选择您要发布的作品类型</p>
        </div>

        <!-- 作品类型选项 -->
        <div class="work-type-options">
          <!-- 新IP选项 -->
          <div 
            class="work-type-card" 
            :class="{ selected: selectedWorkType === 'newIP' }"
            @click="selectWorkType('newIP')"
          >
            <div class="work-type-content">
              <div class="work-type-icon new-icon">
                <span class="icon-symbol">✦</span>
              </div>
              <h2>新IP <span class="type-label">新作品</span></h2>
              <p class="work-description">注册原创图片、视频或文字作品</p>
            </div>
          </div>

          <!-- 混音选项 -->
          <div 
            class="work-type-card"
            :class="{ selected: selectedWorkType === 'remix' }"
            @click="selectWorkType('remix')"
          >
            <div class="work-type-content">
              <div class="work-type-icon remix-icon">
                <span class="icon-symbol">↺</span>
              </div>
              <h2>混音 <span class="type-label">衍生作品</span></h2>
              <p class="work-description">注册与现有作品相关的衍生作品</p>
            </div>
          </div>
        </div>

        <!-- 提示信息区域 -->
        <div class="info-panel">
          <div class="info-icon">
            <span class="coin-emoji">🪙</span>
          </div>
          <div class="info-text">
            <h3>获取AETRIX币</h3>
            <p>您需要一定数量的AETRIX币用于支付gas和交易费用</p>
          </div>
          <div class="info-arrow">
            <span>→</span>
          </div>
        </div>

        <!-- 底部导航按钮 -->
        <div class="navigation">
          <button class="back-btn" @click="goBack">
            <span class="arrow">←</span> 返回
          </button>
          <button class="next-btn" @click="goNext" :disabled="!selectedWorkType">
            下一步 <span class="arrow">→</span>
          </button>
        </div>
      </div>

      <!-- 许可证页面 -->
      <div class="license-container" v-if="currentPage === 'license'">
        <!-- 标题部分 -->
        <div class="header">
          <h1>添加许可证</h1>
          <p class="subtitle-zh">您最多可向此资产添加5个许可证</p>
        </div>

        <!-- 标签页切换 -->
        <div class="tabs">
          <div 
            v-for="(tab, index) in tabs" 
            :key="tab.id"
            :class="['tab', { active: activeTabIndex === index }]"
            @click="setActiveTab(index)"
          >
            {{ tab.label }}
          </div>
        </div>

        <!-- 许可证选项 -->
        <div v-if="activeTabIndex === 0" class="license-options">
          <!-- 开放使用许可 -->
          <div 
            class="license-card" 
            :class="{ selected: selectedLicense === 'open' }"
            @click="selectLicense('open')"
          >
            <div class="license-header">
              <span class="license-tag blue"><i class="license-icon">🔓</i> 限制最少</span>
            </div>
            <h2>开放使用</h2>
            <div class="license-content">
              <p class="license-description-zh">免费分发和混音，无限制、无收入要求、无归属要求</p>
            </div>
            <div class="license-footer">
              <div class="license-icons">
                <span class="icon" title="提供文档">📄</span>
                <span class="icon" title="无需付费">$</span>
                <span class="icon" title="允许混音">↩️</span>
                <span class="icon" title="条款与条件">📋</span>
              </div>
              <div class="check-indicator" v-if="selectedLicense === 'open'">✓</div>
            </div>
          </div>

          <!-- 非商业Remix -->
          <div 
            class="license-card"
            :class="{ selected: selectedLicense === 'non-commercial' }"
            @click="selectLicense('non-commercial')"
          >
            <div class="license-header">
              <span class="license-tag purple"><i class="license-icon">🏆</i> 为您的作品获得认可</span>
            </div>
            <h2>非商业混音</h2>
            <div class="license-content">
              <p class="license-description-zh">任何人都可使用您的作品创建非商业项目</p>
            </div>
            <div class="license-footer">
              <div class="license-icons">
                <span class="icon" title="提供文档">📄</span>
                <span class="icon" title="无需付费">$</span>
                <span class="icon" title="允许混音">↩️</span>
                <span class="icon" title="条款与条件">📋</span>
              </div>
              <div class="check-indicator" v-if="selectedLicense === 'non-commercial'">✓</div>
            </div>
          </div>

          <!-- 商业使用 -->
          <div 
            class="license-card"
            :class="{ selected: selectedLicense === 'commercial' }"
            @click="selectLicense('commercial')"
          >
            <div class="license-header">
              <span class="license-tag green"><i class="license-icon">💲</i> 为您的作品获得报酬</span>
            </div>
            <h2>商业使用</h2>
            <div class="license-content">
              <p class="license-description-zh">允许他人按照您设定的经济条款使用您的作品</p>
            </div>
            <div class="license-footer">
              <div class="license-icons">
                <span class="icon" title="提供文档">📄</span>
                <span class="icon" title="需要付费">$</span>
                <span class="icon" title="限制混音">↩️</span>
                <span class="icon" title="条款与条件">📋</span>
              </div>
              <div class="check-indicator" v-if="selectedLicense === 'commercial'">✓</div>
            </div>
          </div>

          <!-- 商业混音 -->
          <div 
            class="license-card"
            :class="{ selected: selectedLicense === 'commercial-remix' }"
            @click="selectLicense('commercial-remix')"
          >
            <div class="license-header">
              <span class="license-tag red"><i class="license-icon">💰</i> 获得报酬与认可</span>
            </div>
            <h2>商业混音</h2>
            <div class="license-content">
              <p class="license-description-zh">允许他人混音您的作品，同时您获得认可和收益</p>
            </div>
            <div class="license-footer">
              <div class="license-icons">
                <span class="icon" title="提供文档">📄</span>
                <span class="icon" title="需要付费">$</span>
                <span class="icon" title="允许混音">↩️</span>
                <span class="icon" title="条款与条件">📋</span>
              </div>
              <div class="check-indicator" v-if="selectedLicense === 'commercial-remix'">✓</div>
            </div>
          </div>
        </div>

        <!-- 自定义许可证标签页内容 -->
        <div v-else-if="activeTabIndex === 1" class="custom-license">
          <div class="license-filter-list">
            <!-- Licensing Fee 选项 -->
            <div class="license-filter-item" :class="{ expanded: expandedFilters['licensing-fee'] }">
              <div class="filter-header" @click="toggleFilter('licensing-fee')">
                <div class="filter-left">
                  <span class="filter-icon">💰</span>
                  <span class="filter-text">许可费用</span>
                </div>
                <div class="filter-right">
                  <div class="filter-status off" :class="{ active: filterSelections['licensing-fee'] === 'custom' }">0%折扣</div>
                  <div class="expand-arrow">
                    <span :class="{ rotated: expandedFilters['licensing-fee'] }">▼</span>
                  </div>
                </div>
              </div>
              <div class="filter-content" v-if="expandedFilters['licensing-fee']">
                <div class="filter-question">
                  <h4>此许可证的费用是多少？</h4>
                </div>
                <div class="filter-description">
                </div>
                <div class="filter-options">
                  <div class="fee-input-container">
                    <div class="fee-label">许可证价格</div>
                    <div class="fee-input-wrapper">
                      <input type="number" class="fee-input" placeholder="0" min="0">
                      <span class="fee-currency">知识产权</span>
                    </div>
                  </div>
                  <div class="fee-input-container">
                    <div class="fee-label">收入分成</div>
                    <div class="fee-input-wrapper">
                      <input type="number" class="fee-input" placeholder="0" min="0" max="100">
                      <span class="fee-currency">%</span>
                    </div>
                  </div>
                </div>
                <button class="filter-clear">清除</button>
              </div>
            </div>
            
            <!-- Attribution 选项 -->
            <div class="license-filter-item" :class="{ expanded: expandedFilters['attribution'] }">
              <div class="filter-header" @click="toggleFilter('attribution')">
                <div class="filter-left">
                  <span class="filter-icon">📝</span>
                  <span class="filter-text">标明来源</span>
                </div>
                <div class="filter-right">
                  <div class="filter-status required" :class="{ active: filterSelections['attribution'] === 'yes' }">必填</div>
                  <div class="expand-arrow">
                    <span :class="{ rotated: expandedFilters['attribution'] }">▼</span>
                  </div>
                </div>
              </div>
              <div class="filter-content" v-if="expandedFilters['attribution']">
                <div class="filter-question">
                  <h4 class="question-title">使用此模型时，必须标明来源或作者。</h4>
                </div>
                <div class="filter-description">
                </div>
                <div class="filter-options">
                  <button 
                    :class="['option-btn', 'yes-btn', { selected: filterSelections['attribution'] === 'yes' }]"
                    @click="setFilterOption('attribution', 'yes')"
                  >
                    是的
                  </button>
                  <button 
                    :class="['option-btn', 'no-btn', { selected: filterSelections['attribution'] === 'no' }]"
                    @click="setFilterOption('attribution', 'no')"
                  >
                    不
                  </button>
                </div>
                <button class="filter-clear" @click="clearFilterOption('attribution')">清除</button>
              </div>
            </div>
            
            <!-- Remixing 选项 -->
            <div class="license-filter-item" :class="{ expanded: expandedFilters['remixing'] }">
              <div class="filter-header" @click="toggleFilter('remixing')">
                <div class="filter-left">
                  <span class="filter-icon">🔄</span>
                  <span class="filter-text">混合创新</span>
                </div>
                <div class="filter-right">
                  <div class="filter-status allowed" :class="{ active: filterSelections['remixing'] === 'yes' }">允许</div>
                  <div class="expand-arrow">
                    <span :class="{ rotated: expandedFilters['remixing'] }">▼</span>
                  </div>
                </div>
              </div>
              <div class="filter-content" v-if="expandedFilters['remixing']">
                <div class="filter-question">
                  <h4 class="question-title">允许对模型进行修改、组合或重新创作。</h4>
                </div>
                <div class="filter-description">
                </div>
                <div class="filter-options">
                  <button 
                    :class="['option-btn', 'yes-btn', { selected: filterSelections['remixing'] === 'yes' }]"
                    @click="setFilterOption('remixing', 'yes')"
                  >
                    是的
                  </button>
                  <button 
                    :class="['option-btn', 'no-btn', { selected: filterSelections['remixing'] === 'no' }]"
                    @click="setFilterOption('remixing', 'no')"
                  >
                    不
                  </button>
                </div>
                <button class="filter-clear" @click="clearFilterOption('remixing')">清除</button>
              </div>
            </div>
            
            <!-- Expiration 选项 -->
            <div class="license-filter-item" :class="{ expanded: expandedFilters['expiration'] }">
              <div class="filter-header" @click="toggleFilter('expiration')">
                <div class="filter-left">
                  <span class="filter-icon">⏱️</span>
                  <span class="filter-text">到期时间</span>
                </div>
                <div class="filter-right">
                  <div class="filter-status never" :class="{ active: filterSelections['expiration'] !== null }">从不</div>
                  <div class="expand-arrow">
                    <span :class="{ rotated: expandedFilters['expiration'] }">▼</span>
                  </div>
                </div>
              </div>
              <div class="filter-content" v-if="expandedFilters['expiration']">
                <div class="filter-question">
                  <h4>此许可证何时到期?</h4>
                </div>
                <div class="filter-description">
                </div>
                <div class="filter-options expiration-options">
                  <button 
                    :class="['option-btn', 'expiration-btn', { selected: filterSelections['expiration'] === 'never' }]"
                    @click="setFilterOption('expiration', 'never')"
                  >
                    从不
                  </button>
                  <button 
                    :class="['option-btn', 'expiration-btn', { selected: filterSelections['expiration'] === '1year' }]"
                    @click="setFilterOption('expiration', '1year')"
                  >
                    1年
                  </button>
                  <button 
                    :class="['option-btn', 'expiration-btn', { selected: filterSelections['expiration'] === '6month' }]"
                    @click="setFilterOption('expiration', '6month')"
                  >
                    6个月
                  </button>
                  <button 
                    :class="['option-btn', 'expiration-btn', { selected: filterSelections['expiration'] === 'custom' }]"
                    @click="setFilterOption('expiration', 'custom')"
                  >
                    选择日期
                  </button>
                </div>
                <button class="filter-clear" @click="clearFilterOption('expiration')">清除</button>
              </div>
            </div>
            
            <!-- Commercial Use 选项 -->
            <div class="license-filter-item" :class="{ expanded: expandedFilters['commercial-use'] }">
              <div class="filter-header" @click="toggleFilter('commercial-use')">
                <div class="filter-left">
                  <span class="filter-icon">💼</span>
                  <span class="filter-text">商业使用</span>
                </div>
                <div class="filter-right">
                  <div class="filter-status allowed" :class="{ active: filterSelections['commercial-use'] === 'yes' }">允许</div>
                  <div class="expand-arrow">
                    <span :class="{ rotated: expandedFilters['commercial-use'] }">▼</span>
                  </div>
                </div>
              </div>
              <div class="filter-content" v-if="expandedFilters['commercial-use']">
                <div class="filter-question">
                  <h4 class="question-title">允许将此作品应用于商业目的。</h4>
                </div>
                <div class="filter-description">
                </div>
                <div class="filter-options">
                  <button 
                    :class="['option-btn', 'yes-btn', { selected: filterSelections['commercial-use'] === 'yes' }]"
                    @click="setFilterOption('commercial-use', 'yes')"
                  >
                    是的
                  </button>
                  <button 
                    :class="['option-btn', 'no-btn', { selected: filterSelections['commercial-use'] === 'no' }]"
                    @click="setFilterOption('commercial-use', 'no')"
                  >
                    不
                  </button>
                </div>
                <button class="filter-clear" @click="clearFilterOption('commercial-use')">清除</button>
              </div>
            </div>
            
            <!-- AI Training 选项 -->
            <div class="license-filter-item" :class="{ expanded: expandedFilters['ai-training'] }">
              <div class="filter-header" @click="toggleFilter('ai-training')">
                <div class="filter-left">
                  <span class="filter-icon">🤖</span>
                  <span class="filter-text">AI训练</span>
                </div>
                <div class="filter-right">
                  <div class="filter-status allowed" :class="{ active: filterSelections['ai-training'] === 'yes' }">允许</div>
                  <div class="expand-arrow">
                    <span :class="{ rotated: expandedFilters['ai-training'] }">▼</span>
                  </div>
                </div>
              </div>
              <div class="filter-content" v-if="expandedFilters['ai-training']">
                <div class="filter-question">
                  <h4 class="question-title">允许将此产品用于AI训练。</h4>
                </div>
                <div class="filter-description">
                </div>
                <div class="filter-options">
                  <button 
                    :class="['option-btn', 'yes-btn', { selected: filterSelections['ai-training'] === 'yes' }]"
                    @click="setFilterOption('ai-training', 'yes')"
                  >
                    是的
                  </button>
                  <button 
                    :class="['option-btn', 'no-btn', { selected: filterSelections['ai-training'] === 'no' }]"
                    @click="setFilterOption('ai-training', 'no')"
                  >
                    不
                  </button>
                </div>
                <button class="filter-clear" @click="clearFilterOption('ai-training')">清除</button>
              </div>
            </div>
          </div>
          
          <div class="clear-btn-container">
            <button class="clear-all-btn" @click="clearAllFilters">全部清除</button>
          </div>
        </div>

        <!-- 许可证助手标签页内容 -->
        <div v-else-if="activeTabIndex === 2" class="license-assistant">
          <div class="placeholder-content">
            <h2>许可证助手</h2>
            <p>回答几个问题，我们将帮助您选择最合适的许可证</p>
          </div>
        </div>

        <!-- 底部导航按钮 -->
        <div class="navigation">
          <button class="back-btn" @click="goBack">
            <span class="arrow">←</span> 返回
          </button>
          <button class="next-btn" @click="submitAsset" :disabled="!selectedLicense && activeTabIndex === 0">
            下一步 <span class="arrow">→</span>
          </button>
        </div>
      </div>

      <!-- 资产详情页面 -->
      <div class="asset-details-container" v-if="currentPage === 'assetDetails'">
        <!-- 标题部分 -->
        <div class="header">
          <h1>添加资产详细信息</h1>
        </div>

        <!-- 资产名称输入 -->
        <div class="form-group">
          <label for="assetName">为您的资产命名</label>
          <input 
            type="text" 
            id="assetName" 
            v-model="assetName" 
            placeholder="输入资产名称"
            class="input-field"
          >
        </div>

        <!-- 上传资产选项卡 -->
        <div class="upload-tabs">
          <div 
            :class="['upload-tab', { active: activeUploadMethod === 'file' }]"
            @click="activeUploadMethod = 'file'"
          >
            上传资产
          </div>
          <div 
            :class="['upload-tab', { active: activeUploadMethod === 'wallet' }]"
            @click="activeUploadMethod = 'wallet'"
          >
            从已有作品中选择
          </div>
        </div>

        <!-- 资产类型选择区域 -->
        <div v-if="activeUploadMethod === 'file'" class="asset-type-section">
          <div class="asset-type-grid">
            <div 
              class="asset-type-card"
              :class="{ selected: selectedAssetType === 'video' }"
              @click="selectAssetType('video')"
            >
              <div class="asset-type-icon">
                <span class="type-icon">▶</span>
              </div>
              <p class="asset-type-name">视频类</p>
            </div>
            
            <div 
              class="asset-type-card"
              :class="{ selected: selectedAssetType === 'image' }"
              @click="selectAssetType('image')"
            >
              <div class="asset-type-icon">
                <span class="type-icon">🖼</span>
              </div>
              <p class="asset-type-name">图片类</p>
            </div>
            
            <div 
              class="asset-type-card"
              :class="{ selected: selectedAssetType === 'audio' }"
              @click="selectAssetType('audio')"
            >
              <div class="asset-type-icon">
                <span class="type-icon">♪</span>
              </div>
              <p class="asset-type-name">音频类</p>
            </div>
            
            <div 
              class="asset-type-card"
              :class="{ selected: selectedAssetType === 'text' }"
              @click="selectAssetType('text')"
            >
              <div class="asset-type-icon">
                <span class="type-icon">T</span>
              </div>
              <p class="asset-type-name">文字类</p>
            </div>
          </div>
          
          <!-- 选择了资产类型后显示上传区域 -->
          <div v-if="selectedAssetType" class="upload-area-container">
            <div class="upload-header">
              <h3>上传文件</h3>
              <p class="file-types">支持的文件类型:</p>
              <p class="file-types" v-if="selectedAssetType === 'image'">JPG、PNG、GIF、SVG、WEBP</p>
              <p class="file-types" v-if="selectedAssetType === 'video'">MP4、WEBM、MOV</p>
              <p class="file-types" v-if="selectedAssetType === 'audio'">WAV、MP3、FLAC、AAC、OGG、M4A、OPUS</p>
              <p class="file-types" v-if="selectedAssetType === 'text'">TXT、PDF、DOC、DOCX</p>
              <p class="file-size">最大大小1000MB</p>
            </div>

            <!-- 上传文件预览区域 -->
            <div v-if="uploadedFiles.length > 0" class="uploaded-files-preview">
              <div class="preview-files-grid">
                <div v-for="(file, index) in uploadedFiles" :key="index" class="preview-file-item">
                  <div class="preview-file-content">
                    <!-- 图片预览 -->
                    <img v-if="file.type.startsWith('image/')" :src="file.url" class="preview-image" />
                    
                    <!-- 视频预览 -->
                    <div v-else-if="file.type.startsWith('video/')" class="preview-video">
                      <video :src="file.url" controls class="preview-media"></video>
                    </div>
                    
                    <!-- 音频预览 -->
                    <div v-else-if="file.type.startsWith('audio/')" class="preview-audio">
                      <div class="audio-icon">♪</div>
                      <audio :src="file.url" controls class="preview-media-audio"></audio>
                    </div>
                    
                    <!-- 文档预览 -->
                    <div v-else class="preview-document">
                      <div class="document-icon">
                        <span class="doc-icon">T</span>
                      </div>
                      <p class="document-name">{{ file.name }}</p>
                    </div>
                  </div>
                  
                  <!-- 删除按钮 -->
                  <button class="remove-file-btn" @click="removeFile(index)" title="移除文件">×</button>
                </div>
              </div>
            </div>

            <div class="upload-area" @click="triggerFileUpload" @dragover.prevent @drop.prevent="onFileDrop">
              <div class="upload-icons">
                <span class="upload-icon" v-if="selectedAssetType === 'video'">📹</span>
                <span class="upload-icon" v-if="selectedAssetType === 'audio'">🎵</span>
                <span class="upload-icon" v-if="selectedAssetType === 'image'">🖼️</span>
                <span class="upload-icon" v-if="selectedAssetType === 'text'">📄</span>
              </div>
              <p class="upload-text">在此处浏览或拖放您的文件</p>
              <input 
                type="file" 
                ref="fileInput" 
                class="hidden-file-input"
                @change="handleFileSelect"
                multiple
                :accept="fileTypeAccept"
              >
            </div>
            <p v-if="uploadedFiles.length === 0" class="file-required">需要文件</p>
          </div>
        </div>

        <!-- 钱包选择区域 -->
        <div v-if="activeUploadMethod === 'wallet'" class="wallet-section">
          <h3>从已有作品中选择</h3>
          <p>查看您之前已创建的作品</p>
          <!-- 钱包内容占位 -->
          <div class="wallet-placeholder">
            <p>暂无已创建作品</p>
          </div>
        </div>

        <!-- 资产描述 -->
        <div class="form-group">
          <label for="assetDescription">
            描述资产
            <p class="description-help">您可以包含历史记录、使用指南或其他有用的详细信息等信息。</p>
          </label>
          <textarea 
            id="assetDescription" 
            v-model="assetDescription" 
            placeholder="添加描述"
            class="textarea-field"
            rows="4"
          ></textarea>
        </div>

        <!-- 底部导航按钮 -->
        <div class="navigation">
          <button class="back-btn" @click="goBack">
            <span class="arrow">←</span> 返回
          </button>
          <button class="next-btn" @click="goNext" :disabled="!assetName || uploadedFiles.length === 0">
            下一步 <span class="arrow">→</span>
          </button>
        </div>
      </div>

      <!-- 创作者信息页面 -->
      <div class="creators-container" v-if="currentPage === 'creators'">
        <div class="header">
          <h1>创造者</h1>
          <p class="subtitle">将共同创建者添加到此资产（可选）</p>
        </div>

        <!-- 添加共同创作者 -->
        <div class="add-creators-section">
          <h3>添加共同创作者</h3>
          <div class="creators-input-row">
            <input 
              type="text" 
              class="input-field creator-input" 
              placeholder="输入名称搜索"
              v-model="newCreatorName"
            >
            <input 
              type="text" 
              class="input-field creator-input" 
              placeholder="输入用户ID搜索"
              v-model="newCreatorWallet"
            >
            <button 
              class="add-creator-btn" 
              @click="addCoCreator"
              :disabled="!newCreatorName || !newCreatorWallet"
            >
              添加 <span class="plus-icon">+</span>
            </button>
          </div>
        </div>

        <!-- 创作者列表 -->
        <div class="creators-list-section">
          <h3>创作者</h3>
          
          <!-- 当前用户（管理员） -->
          <div class="creator-item current-user">
            <div class="creator-avatar">
              <div class="avatar-image">😀</div>
            </div>
            <div class="creator-info">
              <div class="creator-name">你</div>
              <div class="creator-role">管理</div>
            </div>
          </div>
          
          <!-- 共同创作者列表 -->
          <div v-for="(creator, index) in coCreators" :key="index" class="creator-item">
            <div class="creator-avatar">
              <div class="avatar-image">👤</div>
            </div>
            <div class="creator-info">
              <div class="creator-name">{{ creator.name }}</div>
              <div class="creator-wallet">{{ shortenWallet(creator.wallet) }}</div>
            </div>
            <button class="remove-creator-btn" @click="removeCoCreator(index)">×</button>
          </div>
        </div>

        <!-- 底部导航按钮 -->
        <div class="navigation">
          <button class="back-btn" @click="goBack">
            <span class="arrow">←</span> 返回
          </button>
          <button class="next-btn" @click="goNext">
            下一步 <span class="arrow">→</span>
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref, computed } from 'vue'

// 当前页面状态
const currentPage = ref('start') // 'start', 'workType', 'license', 'assetDetails', 或 'creators'

// 标签页数据
const tabs = [
  { id: 'preset', label: '预设许可证' },
  { id: 'custom', label: '自定义许可证' },
  { id: 'assistant', label: '许可证助手' }
]

// 记录展开的过滤器项
const expandedFilters = ref<Record<string, boolean>>({
  'ai-training': false,
  'commercial-use': false,
  'attribution': false, // 修改为默认不展开
  'remixing': false,
  'expiration': false,
  'licensing-fee': false
})

// 切换过滤器项的展开/折叠状态
const toggleFilter = (filterId: string) => {
  expandedFilters.value[filterId] = !expandedFilters.value[filterId]
}

// 作品类型数据
const workTypes = [
  { id: 'newIP', label: '新IP', icon: 'sparkles', description: '注册原创图片、视频或文字作品' },
  { id: 'remix', label: '混音', icon: 'remix', description: '注册与现有作品相关的衍生作品' }
]

// 当前选中的标签页
const activeTabIndex = ref(0)

// 当前选择的许可证
const selectedLicense = ref('')

// 当前选择的作品类型
const selectedWorkType = ref('')

// 资产详情页面数据
const assetName = ref('')
const assetDescription = ref('')
const activeUploadMethod = ref('file')
const selectedFile = ref(null)
const fileInput = ref(null)
const selectedAssetType = ref('')
const uploadedFiles = ref<Array<{name: string, type: string, url: string, file: File}>>([])

// 创作者页面数据
const newCreatorName = ref('')
const newCreatorWallet = ref('')
const coCreators = ref<Array<{name: string, wallet: string}>>([])

// 根据选择的资产类型确定接受的文件类型
const fileTypeAccept = computed(() => {
  switch (selectedAssetType.value) {
    case 'image':
      return 'image/jpeg,image/png,image/gif,image/svg+xml,image/webp';
    case 'video':
      return 'video/mp4,video/webm,video/quicktime';
    case 'audio':
      return 'audio/wav,audio/mpeg,audio/flac,audio/aac,audio/ogg,audio/mp4,audio/opus';
    case 'text':
      return '.txt,.pdf,.doc,.docx,application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document';
    default:
      return '';
  }
});

// 页面跳转函数
const goToStart = () => {
  currentPage.value = 'start'
}

const goToWorkType = () => {
  currentPage.value = 'workType'
  // 重置选择状态，确保进入页面时没有默认选中的选项
  selectedWorkType.value = ''
}

const goToAssetDetails = () => {
  currentPage.value = 'assetDetails'
}

const goToCreators = () => {
  currentPage.value = 'creators'
}

const goToLicense = () => {
  currentPage.value = 'license'
  resetExpandedFilters()
}

const showUnavailable = (type: string) => {
  alert(`${type === 'task' ? '发布任务' : '发布活动'}功能尚未开放，敬请期待`)
}

// 选择作品类型
const selectWorkType = (type: string) => {
  selectedWorkType.value = type
}

// 切换标签页
const setActiveTab = (index: number) => {
  activeTabIndex.value = index
  // 切换标签页时清除选择的许可证
  if (index !== 0) {
    selectedLicense.value = ''
  }
  
  // 切换到自定义许可证标签页时重置所有展开状态
  if (index === 1) {
    resetExpandedFilters()
  }
}

// 选择许可证
const selectLicense = (license: string) => {
  selectedLicense.value = license
}

// 选择资产类型
const selectAssetType = (type: string) => {
  selectedAssetType.value = type
}

// 验证文件类型是否符合当前选择的资产类型
const isValidFileType = (file: File) => {
  const fileType = file.type.toLowerCase();
  
  switch (selectedAssetType.value) {
    case 'image':
      return fileType.startsWith('image/');
    case 'video':
      return fileType.startsWith('video/');
    case 'audio':
      return fileType.startsWith('audio/');
    case 'text':
      return fileType.startsWith('text/') || 
             fileType === 'application/pdf' || 
             fileType === 'application/msword' || 
             fileType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';
    default:
      return false;
  }
}

// 文件上传处理函数
const triggerFileUpload = () => {
  if (fileInput.value) {
    fileInput.value.click()
  }
}

const handleFileSelect = (event: Event) => {
  const target = event.target as HTMLInputElement
  if (target.files && target.files.length > 0) {
    // 处理多个文件
    for(let i = 0; i < target.files.length; i++) {
      const file = target.files[i]
      if (isValidFileType(file)) {
        addFileToPreview(file)
      }
    }
    // 保持兼容性，设置第一个文件为selectedFile
    if (uploadedFiles.value.length > 0) {
      selectedFile.value = uploadedFiles.value[0].file
    }
  }
}

const onFileDrop = (event: DragEvent) => {
  if (event.dataTransfer && event.dataTransfer.files.length > 0) {
    // 处理多个文件
    for(let i = 0; i < event.dataTransfer.files.length; i++) {
      const file = event.dataTransfer.files[i]
      if (isValidFileType(file)) {
        addFileToPreview(file)
      }
    }
    // 保持兼容性，设置第一个文件为selectedFile
    if (uploadedFiles.value.length > 0) {
      selectedFile.value = uploadedFiles.value[0].file
    }
  }
}

// 添加文件到预览
const addFileToPreview = (file: File) => {
  const fileUrl = URL.createObjectURL(file)
  uploadedFiles.value.push({
    name: file.name,
    type: file.type,
    url: fileUrl,
    file: file
  })
}

// 移除文件
const removeFile = (index: number) => {
  // 释放URL对象
  URL.revokeObjectURL(uploadedFiles.value[index].url)
  // 移除文件
  uploadedFiles.value.splice(index, 1)
  // 如果没有文件了，清空selectedFile
  if (uploadedFiles.value.length === 0) {
    selectedFile.value = null
  } else if (index === 0 && uploadedFiles.value.length > 0) {
    // 如果删除的是第一个文件，更新selectedFile为新的第一个文件
    selectedFile.value = uploadedFiles.value[0].file
  }
}

// 添加共同创作者
const addCoCreator = () => {
  if (newCreatorName.value && newCreatorWallet.value) {
    coCreators.value.push({
      name: newCreatorName.value,
      wallet: newCreatorWallet.value
    })
    // 清空输入
    newCreatorName.value = ''
    newCreatorWallet.value = ''
  }
}

// 删除共同创作者
const removeCoCreator = (index: number) => {
  coCreators.value.splice(index, 1)
}

// 缩短钱包地址显示
const shortenWallet = (wallet: string) => {
  if (wallet.length > 12) {
    return wallet.slice(0, 6) + '...' + wallet.slice(-4)
  }
  return wallet
}

// 提交资产
const submitAsset = () => {
  console.log('资产提交完成')
  console.log('资产名称:', assetName.value)
  console.log('资产描述:', assetDescription.value)
  console.log('上传文件:', uploadedFiles.value)
  console.log('共同创作者:', coCreators.value)
  console.log('许可证类型:', selectedLicense.value)
  // 这里可以添加提交到服务器的逻辑
  alert('资产提交成功!')
  currentPage.value = 'start'
}

// 导航功能
const goBack = () => {
  if (currentPage.value === 'assetDetails') {
    goToWorkType() // 在资产详情页面返回到作品类型选择页面
  } else if (currentPage.value === 'creators') {
    goToAssetDetails() // 在创作者页面返回到资产详情页面
  } else if (currentPage.value === 'license') {
    goToCreators() // 在许可证页面返回到创作者页面
    resetExpandedFilters() // 在离开许可证页面时清除展开状态
  } else {
    goToStart() // 返回到首页
  }
}

const goNext = () => {
  if (currentPage.value === 'workType' && selectedWorkType.value) {
    // 从作品类型选择页面前进到资产详情页面
    goToAssetDetails()
  } else if (currentPage.value === 'assetDetails' && assetName.value && uploadedFiles.value.length > 0) {
    // 从资产详情页面前进到创作者页面
    goToCreators()
  } else if (currentPage.value === 'creators') {
    // 从创作者页面前进到许可证页面
    goToLicense()
  }
}

// Add this after the expandedFilters ref declaration
// 记录每个过滤器项的选择状态
const filterSelections = ref<Record<string, string | null>>({
  'ai-training': null,
  'commercial-use': null,
  'attribution': null,
  'remixing': null,
  'expiration': null,
  'licensing-fee': null
})

// 设置过滤器选项
const setFilterOption = (filterId: string, value: string) => {
  filterSelections.value[filterId] = value
}

// 清除过滤器选项
const clearFilterOption = (filterId: string) => {
  filterSelections.value[filterId] = null
}

// Add this after the clearFilterOption function
// 清除所有过滤器选项
const clearAllFilters = () => {
  Object.keys(filterSelections.value).forEach(key => {
    filterSelections.value[key] = null
  })
}

// Add these refs to track license fee values
const licensePrice = ref(0)
const revenueShare = ref(0)

// Update the filterSelections when license fee values change
const updateLicenseFee = () => {
  if (licensePrice.value > 0 || revenueShare.value > 0) {
    filterSelections.value['licensing-fee'] = 'custom'
  } else {
    filterSelections.value['licensing-fee'] = null
  }
}

// Clear license fee values
const clearLicenseFee = () => {
  licensePrice.value = 0
  revenueShare.value = 0
  filterSelections.value['licensing-fee'] = null
}

// 重置所有展开的过滤器状态为false
const resetExpandedFilters = () => {
  Object.keys(expandedFilters.value).forEach(key => {
    expandedFilters.value[key] = false
  })
}
</script>

<style scoped>
/* 隐藏所有滚动条 */
::-webkit-scrollbar {
  display: none;
}

html, body {
  overflow: hidden;
  margin: 0;
  padding: 0;
}

.app-container {
  width: 100vw;
  height: 100vh;
  box-sizing: border-box;
  background: #3a3a3a; /* Changed from gradient to solid gray */
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  color: white;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
}

.blur-container {
  width: 90vw;
  max-width: 1280px;
  height: 90vh;
  backdrop-filter: blur(30px);
  -webkit-backdrop-filter: blur(30px);
  background: rgba(60, 60, 60, 0.15); /* Changed to match gray theme */
  overflow: hidden;
  border-radius: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
}

/* 启动页面样式 */
.start-page {
  width: 100%;
  height: 100%;
  padding: 60px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Glass card design from Uiverse.io by codebykay101 */
.menu-options {
  display: flex;
  gap: 0;
  margin-top: 60px;
  position: relative;
  justify-content: center;
  align-items: center;
}

.menu-card {
  position: relative;
  width: 180px;
  height: 200px;
  background: linear-gradient(rgba(60, 60, 60, 0.8), rgba(40, 40, 40, 0.7)); /* Darker background */
  border: 1px solid rgba(100, 100, 100, 0.35); /* Darker border */
  box-shadow: 0 25px 25px rgba(0, 0, 0, 0.35); /* Darker shadow */
  display: flex;
  justify-content: center;
  align-items: center;
  transition: 0.5s;
  border-radius: 10px;
  margin: 0 -45px;
  backdrop-filter: blur(15px);
  cursor: pointer;
}

.menu-card:nth-child(1) {
  transform: rotate(-8deg);
  --r: -8;
}

.menu-card:nth-child(2) {
  transform: rotate(0deg);
  --r: 0;
  z-index: 10;
}

.menu-card:nth-child(3) {
  transform: rotate(8deg);
  --r: 8;
}

.menu-options:hover .menu-card {
  transform: rotate(0deg);
  margin: 0 15px;
  background: linear-gradient(rgba(70, 70, 70, 0.85), rgba(50, 50, 50, 0.75)); /* Darker hover state */
  box-shadow: 0 30px 30px rgba(0, 0, 0, 0.4);
}

.menu-card:hover {
  transform: translateY(-10px) !important;
  border: 1px solid rgba(150, 150, 150, 0.5); /* Brighter border on hover */
  background: linear-gradient(rgba(80, 80, 80, 0.9), rgba(60, 60, 60, 0.8)); /* Even darker on individual hover */
}

.menu-card::before {
  content: attr(data-text);
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 40px;
  background: rgba(30, 30, 30, 0.75); /* Darker label background */
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  font-weight: 500;
  font-size: 16px;
}

/* Remove the icon-wrapper styles */
.icon-wrapper {
  display: none;
}

/* Restore the menu-icon styles without the wrapper */
.menu-icon {
  width: 50px;
  height: 50px;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  opacity: 1;
  filter: invert(1) drop-shadow(0 2px 3px rgba(0, 0, 0, 0.3));
  margin-bottom: 40px; /* Add bottom margin to push the icon up from the text */
}

/* Restore the specific icon styles */
.people-icon {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='1' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2'%3E%3C/path%3E%3Ccircle cx='9' cy='7' r='4'%3E%3C/circle%3E%3Cpath d='M23 21v-2a4 4 0 0 0-3-3.87'%3E%3C/path%3E%3Cpath d='M16 3.13a4 4 0 0 1 0 7.75'%3E%3C/path%3E%3C/svg%3E");
}

.product-icon {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='1' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='3' width='18' height='18' rx='2' ry='2'%3E%3C/rect%3E%3Ccircle cx='8.5' cy='8.5' r='1.5'%3E%3C/circle%3E%3Cpolyline points='21 15 16 10 5 21'%3E%3C/polyline%3E%3C/svg%3E");
}

.task-icon {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='1' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolygon points='12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2'%3E%3C/polygon%3E%3C/svg%3E");
}

/* Hide the menu title since we're using data-text */
.menu-title {
  display: none;
}

@media (max-width: 900px) {
  .menu-options {
    flex-direction: column;
    gap: 40px;
    margin-top: 40px;
  }
  
  .menu-card {
    width: 180px;
    height: 200px;
    margin: 0;
    transform: rotate(0deg) !important;
    background: linear-gradient(rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.15)); /* Brighter on mobile */
  }
  
  .menu-options:hover .menu-card {
    margin: 0;
    box-shadow: 0 25px 25px rgba(0, 0, 0, 0.35);
  }
  
  .menu-card:hover {
    transform: translateY(-5px) !important; /* Reduced lift effect on mobile */
  }
}

.info-panel {
  display: flex;
  align-items: center;
  background: linear-gradient(rgba(60, 60, 60, 0.8), rgba(40, 40, 40, 0.7));
  border-radius: 12px;
  padding: 20px 30px;
  margin-top: auto;
  margin-bottom: 40px;
  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(100, 100, 100, 0.35);
  cursor: pointer;
  height: 70px;
}

.info-icon {
  width: 42px;
  height: 42px;
  background-color: rgba(50, 50, 50, 0.7);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 20px;
  flex-shrink: 0;
}

.coin-emoji {
  font-size: 22px;
}

.info-text {
  flex: 1;
}

.info-text h3 {
  margin: 0 0 4px 0;
  font-size: 17px;
  font-weight: 600;
}

.info-text p {
  margin: 0;
  font-size: 13px;
  color: rgba(255, 255, 255, 0.6);
}

.info-arrow {
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 20px;
  color: rgba(255, 255, 255, 0.6);
  font-size: 18px;
}

/* 许可证容器样式 */
.license-container {
  width: 100%;
  height: 100%;
  padding: 40px 50px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  background-color: #2c5464;
}

.header {
  margin-bottom: 32px;
  flex-shrink: 0;
  text-align: center;
}

h1 {
  font-size: 34px;
  margin: 0 0 12px 0;
  font-weight: 600;
  letter-spacing: -0.5px;
}

.subtitle-zh {
  margin: 0;
  color: rgba(255, 255, 255, 0.7);
  font-size: 16px;
  line-height: 1.5;
  text-align: left;
}

.tabs {
  display: flex;
  border-bottom: 1px solid rgba(100, 100, 100, 0.35);
  margin-bottom: 20px;
  flex-shrink: 0;
  position: relative;
  z-index: 2;
}

.tab {
  padding: 12px 20px;
  font-size: 15px;
  font-weight: 500;
  color: rgba(255, 255, 255, 0.7);
  cursor: pointer;
  position: relative;
  transition: all 0.3s;
}

.tab:hover {
  color: white;
  background-color: rgba(80, 80, 80, 0.3);
}

.tab.active {
  color: white;
}

.tab.active:after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: white;
}

.license-options {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  flex: 1;
  overflow-y: auto;
  padding-right: 10px;
  padding-bottom: 10px;
  position: relative;
  z-index: 1;
  min-height: 0;
  margin-bottom: 20px;
}

.license-card {
  flex: 1;
  min-width: 220px;
  background: linear-gradient(rgba(60, 60, 60, 0.8), rgba(40, 40, 40, 0.7));
  border-radius: 12px;
  transition: all 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
  padding: 0;
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(100, 100, 100, 0.35);
  cursor: pointer;
}

.license-card:hover {
  background: linear-gradient(rgba(70, 70, 70, 0.85), rgba(50, 50, 50, 0.75));
  transform: translateY(-8px);
  box-shadow: 0 30px 30px rgba(0, 0, 0, 0.4);
  border-color: rgba(150, 150, 150, 0.5);
}

.license-card.selected {
  border: 1px solid rgba(150, 150, 150, 0.7);
  background: linear-gradient(rgba(80, 80, 80, 0.9), rgba(60, 60, 60, 0.8));
  transform: translateY(-8px);
  box-shadow: 0 30px 35px rgba(0, 0, 0, 0.4);
}

.license-card h2 {
  font-size: 22px;
  margin: 8px 24px 12px;
  font-weight: 600;
}

.license-header {
  padding: 20px 24px 0 24px;
  margin-bottom: 0;
}

.license-content {
  padding: 0 24px;
  margin-bottom: 20px;
  flex: 1;
}

.license-description-zh {
  margin: 0;
  font-size: 15px;
  line-height: 1.5;
  color: #bbb;
}

.license-footer {
  margin-top: auto;
  display: flex;
  justify-content: space-between;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  padding: 15px 24px;
  background-color: rgba(0, 0, 0, 0.2);
}

.license-icons {
  display: flex;
  gap: 18px;
}

.icon {
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0.6;
}

.check-indicator {
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(52, 199, 89, 0.3);
  border-radius: 50%;
  color: white;
  font-size: 14px;
  font-weight: 500;
}

.navigation {
  margin-top: auto;
  display: flex;
  justify-content: space-between;
  flex-shrink: 0;
  position: relative;
  z-index: 2;
  padding-top: 40px;
}

.back-btn, .next-btn {
  padding: 14px 28px;
  border-radius: 30px;
  border: none;
  cursor: pointer;
  font-size: 16px;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 10px;
  transition: all 0.3s;
}

.back-btn {
  background: rgba(255, 255, 255, 0.2);
  color: white;
  backdrop-filter: blur(5px);
  border: 1px solid rgba(255, 255, 255, 0.3);
}

.back-btn:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
}

.next-btn {
  background: white;
  color: #222;
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
}

.next-btn:hover {
  background: #f0f0f0;
  transform: translateY(-2px);
  box-shadow: 0 12px 20px rgba(0, 0, 0, 0.15);
}

.next-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.arrow {
  font-size: 20px;
  line-height: 1;
}

.custom-license, .license-assistant {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: auto;
  padding-bottom: 20px;
}

.placeholder-content {
  max-width: 600px;
  color: #bbb;
}

.placeholder-content h2 {
  margin-bottom: 20px;
}

.placeholder-content p {
  font-size: 18px;
  line-height: 1.6;
}

@media (max-width: 1200px) {
  .license-options {
    gap: 20px;
  }
  
  .license-card {
    padding: 0;
  }
  
  .menu-options {
    gap: 30px;
  }
  
  .menu-card {
    width: 200px;
    height: 280px;
  }
}

@media (max-width: 900px) {
  .license-options {
    grid-template-columns: 1fr;
  }
  
  .license-container, .work-type-container {
    padding: 30px;
  }
  
  .license-content {
    margin-bottom: 16px;
  }
  
  .license-footer {
    padding: 15px 20px;
  }
  
  .menu-options {
    flex-direction: column;
    gap: 40px;
    margin-top: 40px;
  }
  
  .menu-card {
    width: 190px;
    height: 254px;
  }
  
  .icon-wrapper {
    width: 80px;
    height: 80px;
    margin-bottom: 0;
    margin-right: 30px;
  }
  
  .start-page {
    padding: 30px;
  }
  
  .work-type-options {
    flex-direction: column;
  }
  
  .work-type-card {
    width: 100%;
  }
}

/* 资产详情页面样式 */
.asset-details-container {
  width: 100%;
  height: 100%;
  padding: 40px 50px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  overflow: auto;
  background-color: #2c5464;
  color: white;
}

.form-group {
  margin-bottom: 30px;
}

.form-group label {
  display: block;
  font-size: 18px;
  font-weight: 500;
  margin-bottom: 12px;
}

.description-help {
  font-size: 14px;
  color: #a1a1aa;
  margin: 5px 0 0 0;
  font-weight: normal;
}

.input-field {
  width: 100%;
  padding: 15px;
  background-color: rgba(60, 60, 65, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  color: white;
  font-size: 16px;
  transition: all 0.2s;
}

.input-field:focus {
  outline: none;
  border-color: rgba(255, 255, 255, 0.3);
  background-color: rgba(70, 70, 75, 0.6);
}

.textarea-field {
  width: 100%;
  padding: 15px;
  background-color: rgba(60, 60, 65, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  color: white;
  font-size: 16px;
  resize: vertical;
  min-height: 100px;
  font-family: inherit;
  transition: all 0.2s;
}

.textarea-field:focus {
  outline: none;
  border-color: rgba(255, 255, 255, 0.3);
  background-color: rgba(70, 70, 75, 0.6);
}

.upload-tabs {
  display: flex;
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  margin-bottom: 20px;
}

.upload-tab {
  padding: 12px 20px;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.6);
  position: relative;
  font-size: 15px;
  font-weight: 500;
  transition: color 0.2s;
}

.upload-tab:hover {
  color: #ddd;
}

.upload-tab.active {
  color: white;
}

.upload-tab.active:after {
  content: '';
  position: absolute;
  bottom: -1px;
  left: 0;
  right: 0;
  height: 2px;
  background: white;
}

.asset-type-section {
  margin-bottom: 30px;
}

.asset-type-grid {
  display: flex;
  justify-content: space-between;
  gap: 15px;
  margin-bottom: 30px;
  flex-wrap: wrap;
}

.asset-type-card {
  flex: 1;
  min-width: 150px;
  background: rgba(60, 60, 65, 0.5);
  border-radius: 12px;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.asset-type-card:hover {
  background: rgba(70, 70, 75, 0.6);
  transform: translateY(-3px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
}

.asset-type-card.selected {
  border: 1px solid #fff;
  background: rgba(80, 80, 85, 0.6);
  transform: translateY(-3px);
  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.25);
}

.asset-type-icon {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 15px;
}

.type-icon {
  font-size: 24px;
  color: white;
}

.asset-type-name {
  margin: 0;
  font-size: 16px;
  font-weight: 500;
}

.upload-area-container {
  margin-top: 20px;
}

/* 上传区域样式 */
.upload-section {
  margin-bottom: 30px;
}

.upload-header h3 {
  font-size: 18px;
  margin: 0 0 10px 0;
}

.file-types {
  margin: 0 0 5px 0;
  font-size: 14px;
  color: #a1a1aa;
}

.file-size {
  margin: 0 0 15px 0;
  font-size: 14px;
  color: #a1a1aa;
}

.upload-area {
  border: 2px dashed #e53935;
  border-radius: 12px;
  padding: 40px 20px;
  text-align: center;
  cursor: pointer;
  background: rgba(229, 57, 53, 0.05);
  transition: all 0.2s;
}

.upload-area:hover {
  background: rgba(229, 57, 53, 0.1);
  transform: translateY(-3px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
}

.upload-icons {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin-bottom: 15px;
}

.upload-icon {
  font-size: 24px;
}

.upload-text {
  margin: 5px 0;
  color: #ddd;
}

.hidden-file-input {
  display: none;
}

.wallet-section {
  margin-bottom: 30px;
  padding: 20px;
  background-color: rgba(60, 60, 65, 0.5);
  border-radius: 12px;
  text-align: center;
}

.wallet-placeholder {
  padding: 40px;
  border: 1px dashed rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  margin-top: 20px;
}

.file-required {
  color: #e53935;
  margin: 10px 0 0 0;
  font-size: 14px;
}

.subtitle-zh {
  font-size: 0.85em;
  opacity: 0.8;
  margin-left: 8px;
  font-weight: normal;
}

@media (max-width: 768px) {
  .asset-details-container {
    padding: 30px 20px;
  }
  
  .asset-type-grid {
    flex-direction: column;
    gap: 10px;
  }
  
  .asset-type-card {
    width: 100%;
    flex-direction: row;
    padding: 12px;
    align-items: center;
    justify-content: flex-start;
  }
  
  .asset-type-icon {
    width: 40px;
    height: 40px;
    margin-bottom: 0;
    margin-right: 15px;
  }
  
  .upload-icons {
    gap: 15px;
  }
  
  .upload-area {
    padding: 30px 15px;
  }
}

/* 上传预览样式 */
.uploaded-files-preview {
  margin-bottom: 20px;
}

.preview-files-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 15px;
  margin-bottom: 20px;
}

.preview-file-item {
  position: relative;
  background-color: rgba(30, 30, 35, 0.5);
  border-radius: 8px;
  overflow: hidden;
  aspect-ratio: 1 / 1;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.preview-file-content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.preview-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.preview-video {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.preview-media {
  max-width: 100%;
  max-height: 100%;
}

.preview-audio {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 10px;
}

.audio-icon {
  font-size: 30px;
  margin-bottom: 10px;
  background-color: rgba(100, 100, 255, 0.2);
  width: 50px;
  height: 50px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.preview-media-audio {
  width: 100%;
}

.preview-document {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 10px;
}

.document-icon {
  width: 50px;
  height: 50px;
  border-radius: 10px;
  background-color: rgba(100, 200, 100, 0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 10px;
}

.doc-icon {
  font-size: 30px;
}

.document-name {
  font-size: 12px;
  margin: 0;
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  max-width: 100%;
}

.remove-file-btn {
  position: absolute;
  top: 5px;
  right: 5px;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 14px;
  opacity: 0;
  transition: opacity 0.2s;
  z-index: 2;
}

.preview-file-item:hover .remove-file-btn {
  opacity: 1;
}

.remove-file-btn:hover {
  background-color: rgba(229, 57, 53, 0.8);
}

@media (max-width: 1024px) {
  .preview-files-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 768px) {
  .preview-files-grid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  /* ... existing mobile styles ... */
}

@media (max-width: 480px) {
  .preview-files-grid {
    grid-template-columns: 1fr;
  }
}

/* 创作者页面样式 */
.creators-container {
  width: 100%;
  height: 100%;
  padding: 40px 50px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  overflow: auto;
  background-color: #2c5464;
  color: white;
}

.add-creators-section {
  margin-bottom: 30px;
  background-color: rgba(30, 30, 35, 0.3);
  border-radius: 12px;
  padding: 20px;
}

.add-creators-section h3 {
  margin-top: 0;
  margin-bottom: 20px;
  font-size: 18px;
  font-weight: 500;
}

.creators-input-row {
  display: flex;
  gap: 15px;
  align-items: center;
}

.creator-input {
  flex: 1;
  background-color: rgba(20, 20, 25, 0.5);
}

.add-creator-btn {
  height: 50px;
  border-radius: 8px;
  background-color: #333;
  color: white;
  border: none;
  padding: 0 25px;
  font-size: 16px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s;
}

.add-creator-btn:hover:not(:disabled) {
  background-color: #444;
}

.add-creator-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.plus-icon {
  margin-left: 5px;
  font-size: 18px;
}

.creators-list-section {
  margin-bottom: 30px;
  flex: 1;
}

.creators-list-section h3 {
  margin-top: 0;
  margin-bottom: 20px;
  font-size: 18px;
  font-weight: 500;
}

.creator-item {
  display: flex;
  align-items: center;
  background-color: rgba(30, 30, 35, 0.3);
  border-radius: 12px;
  padding: 15px;
  margin-bottom: 15px;
  position: relative;
}

.creator-avatar {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  overflow: hidden;
  margin-right: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #2f2f2f;
  flex-shrink: 0;
}

.avatar-image {
  font-size: 28px;
}

.creator-info {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.creator-name {
  font-size: 17px;
  font-weight: 500;
}

.creator-role, .creator-wallet {
  font-size: 14px;
  color: #a1a1aa;
}

.remove-creator-btn {
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%);
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.1);
  color: white;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 18px;
  transition: all 0.2s;
}

.remove-creator-btn:hover {
  background-color: rgba(229, 57, 53, 0.8);
}

@media (max-width: 768px) {
  .creators-container {
    padding: 30px 20px;
  }
  
  .creators-input-row {
    flex-direction: column;
  }
  
  .add-creator-btn {
    width: 100%;
  }
}

.license-filter-list {
  margin: 10px 0 30px;
  max-width: 900px;
  margin: 0 auto;
  padding: 10px 5px;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 14px;
}

@media (max-width: 768px) {
  .license-filter-list {
    grid-template-columns: 1fr;
  }
}

.license-filter-item {
  display: flex;
  flex-direction: column;
  background-color: rgba(60, 60, 65, 0.5); /* Changed to match the predefined license cards */
  border-radius: 14px;
  margin-bottom: 0;
  transition: all 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.1);
  overflow: hidden;
  position: relative;
}

.license-filter-item.expanded {
  background-color: rgba(70, 70, 75, 0.6); /* Changed to match the hover state of predefined license cards */
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
  transform: translateY(-2px);
  z-index: 10;
  border-color: rgba(255, 255, 255, 0.2);
}

.filter-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 14px 18px;
  cursor: pointer;
  position: relative;
  z-index: 2;
}

.filter-right {
  display: flex;
  align-items: center;
  gap: 12px;
  min-width: 160px; /* Ensure the width is maintained even when status is hidden */
  justify-content: flex-end;
}

.expand-arrow {
  font-size: 10px;
  color: rgba(255, 255, 255, 0.7);
  transition: transform 0.3s ease;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.expand-arrow span {
  display: inline-block;
  transition: all 0.3s ease;
}

.expand-arrow span.rotated {
  transform: rotate(180deg);
}

.filter-content {
  padding: 0 18px 16px;
  border-top: 1px solid rgba(255, 255, 255, 0.07);
  background-color: rgba(70, 70, 75, 0.6); /* Changed to match the expanded card background */
  text-align: center;
  animation: fadeIn 0.2s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.filter-question {
  margin: 16px 0;
}

.filter-question h4 {
  font-size: 15px;
  font-weight: 500;
  margin: 0 0 8px 0;
  color: #fff;
}

.filter-question p {
  font-size: 13px;
  margin: 0;
  color: rgba(255, 255, 255, 0.7);
}

.filter-description {
  margin-bottom: 16px;
  padding: 12px;
  background-color: rgba(0, 0, 0, 0.2); /* Changed to match original style */
  border-radius: 8px;
  text-align: left;
}

.en-description {
  font-size: 14px;
  margin: 0 0 5px 0;
  color: #fff;
}

.cn-description {
  font-size: 13px;
  margin: 0;
  color: rgba(255, 255, 255, 0.7);
}

.filter-options {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin-bottom: 16px;
  justify-content: center;
}

.option-btn {
  min-width: 100px;
  padding: 8px 12px;
  border-radius: 20px;
  border: 1px solid rgba(255, 255, 255, 0.15);
  background-color: rgba(24, 24, 28, 0.8); /* Changed to match original style */
  color: white;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.25s ease;
  text-align: center;
}

.option-btn:hover {
  background-color: rgba(35, 35, 40, 0.9); /* Changed to match original style */
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.option-btn.selected {
  border-color: rgba(255, 255, 255, 0.4);
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
  transform: translateY(-1px);
}

.yes-btn.selected {
  background-color: rgba(52, 199, 89, 0.25); /* Changed to match original style */
  color: rgb(146, 237, 172);
}

.no-btn.selected {
  background-color: rgba(255, 59, 48, 0.25); /* Changed to match original style */
  color: rgb(255, 145, 140);
}

.expiration-btn.selected {
  background-color: rgba(175, 82, 222, 0.3); /* Changed to match original style */
}

.filter-clear {
  display: block;
  padding: 6px 16px;
  font-size: 13px;
  background-color: transparent;
  color: #fff;
  border: none;
  border-radius: 16px;
  cursor: pointer;
  margin-left: auto;
  transition: all 0.2s;
}

.filter-clear:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.license-filter-item:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 3px;
  height: 100%;
  opacity: 0.9;
  transition: all 0.3s ease;
}

.license-filter-item:nth-child(1):before {
  background-color: rgba(255, 59, 48, 0.8);
}

.license-filter-item:nth-child(2):before {
  background-color: rgba(0, 122, 255, 0.8);
}

.license-filter-item:nth-child(3):before {
  background-color: rgba(52, 199, 89, 0.8);
}

.license-filter-item:nth-child(4):before {
  background-color: rgba(175, 82, 222, 0.8);
}

.license-filter-item:nth-child(5):before {
  background-color: rgba(255, 149, 0, 0.8);
}

.license-filter-item:nth-child(6):before {
  background-color: rgba(88, 86, 214, 0.8);
}

.license-filter-item:hover:not(.expanded) {
  transform: translateY(-2px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
  background-color: rgba(70, 70, 75, 0.6); /* Changed to match license card hover state */
}

.license-filter-item:hover:before {
  width: 5px;
}

.filter-left {
  display: flex;
  align-items: center;
  gap: 15px;
}

.filter-icon {
  font-size: 22px;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.filter-header:hover .filter-icon {
  transform: scale(1.05);
}

.filter-text {
  font-size: 16px;
  font-weight: 500;
  color: #fff;
  transition: color 0.3s;
}

.filter-status {
  padding: 8px 16px;
  border-radius: 30px;
  font-size: 14px;
  font-weight: 600;
  text-align: center;
  min-width: 110px;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  opacity: 0; /* Hide by default */
  visibility: hidden; /* Hide by default but keep space */
  display: flex;
  justify-content: center;
  align-items: center;
}

.license-filter-item.expanded .filter-status,
.filter-status.active {
  opacity: 1;
  visibility: visible;
}

.filter-header:hover .filter-status:before {
  opacity: 1;
}

.filter-status.allowed {
  background-color: #1b5e20;
  color: white;
}

.filter-status.required {
  background-color: #0d47a1;
  color: white;
}

.filter-status.never {
  background-color: #4a148c;
  color: white;
}

.filter-status.off {
  background-color: #8b0000;
  color: white;
}

.clear-btn-container {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.clear-all-btn {
  background-color: rgba(40, 40, 45, 0.6); /* Changed to match original style */
  color: #fff;
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: 30px;
  padding: 10px 24px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 8px;
  position: relative;
  overflow: hidden;
  letter-spacing: 0.5px;
}

.clear-all-btn:hover {
  background-color: rgba(60, 60, 65, 0.8);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.clear-all-btn:active {
  transform: translateY(0);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
}

.custom-license {
  padding: 15px 30px;
  overflow: auto;
  display: flex;
  flex-direction: column;
  height: 100%;
}

.fee-input-container {
  width: 100%;
  margin-bottom: 10px;
}

.fee-label {
  font-size: 14px;
  color: #bbb;
  margin-bottom: 6px;
}

.fee-input-wrapper {
  display: flex;
  align-items: center;
  background-color: rgba(30, 30, 35, 0.6); /* Changed to match original style */
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  overflow: hidden;
}

.fee-input {
  flex: 1;
  background: transparent;
  border: none;
  color: white;
  padding: 10px 12px;
  font-size: 16px;
  outline: none;
}

.fee-currency {
  padding: 10px 12px;
  background-color: rgba(0, 0, 0, 0.2); /* Changed to match original style */
  font-size: 14px;
  color: #bbb;
}

.expiration-options {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 10px;
  width: 100%;
}

.expiration-btn {
  width: 100%;
  text-align: center;
}

.question-title {
  text-align: center;
  font-size: 18px;
  font-weight: 500;
  margin: 15px 0;
  color: #ffffff;
  background-color: #1e1e1e;
  padding: 10px;
  border-radius: 4px;
  width: 100%;
}

.start-container {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: #3a3a3a; /* Changed from gradient to solid gray */
  color: white;
  position: relative;
  overflow: hidden;
  padding: 20px;
}

.card-container {
  display: flex;
  gap: 20px;
  margin-top: 40px;
  justify-content: center;
  z-index: 1;
  background-color: rgba(80, 80, 80, 0.25); /* Slightly lighter gray with transparency */
  border-radius: 20px;
  padding: 50px;
  backdrop-filter: blur(5px);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.menu-title {
  display: none; /* Hide this since we're now using data-text attribute */
}

@media (max-width: 900px) {
  .menu-options {
    flex-direction: column;
    gap: 30px;
    margin-top: 40px;
  }
  
  .menu-card {
    width: 180px;
    height: 200px;
    margin: 0;
    transform: rotate(0deg) !important;
    background: linear-gradient(rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.15)); /* Brighter on mobile */
  }
  
  .menu-options:hover .menu-card {
    margin: 0;
    box-shadow: 0 25px 25px rgba(0, 0, 0, 0.35);
  }
  
  .menu-card:hover {
    transform: translateY(-5px) !important; /* Reduced lift effect on mobile */
  }
}

/* 作品类型选择页面样式 */
.work-type-container {
  width: 100%;
  height: 100%;
  padding: 60px 75px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  background-color: #303030;
}

.title-with-subtitle {
  font-size: 28px;
  margin: 0 0 8px 0;
  font-weight: 600;
  text-align: left;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.subtitle-zh {
  font-size: 15px;
  color: rgba(255, 255, 255, 0.6);
  margin: 0 0 60px 0;
  font-weight: normal;
}

.work-type-options {
  margin-top: 20px;
  display: flex;
  gap: 30px;
  flex-direction: row;
  justify-content: space-between;
}

.work-type-card {
  display: flex;
  flex-direction: column;
  background: linear-gradient(rgba(60, 60, 60, 0.8), rgba(40, 40, 40, 0.7));
  border-radius: 12px;
  padding: 0;
  cursor: pointer;
  transition: all 0.3s ease;
  border: 1px solid rgba(100, 100, 100, 0.35);
  width: calc(50% - 15px);
  overflow: hidden;
  backdrop-filter: blur(15px);
  box-shadow: 0 25px 25px rgba(0, 0, 0, 0.35);
  height: 180px;
}

.work-type-content {
  padding: 30px 35px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: 100%;
}

.work-type-icon {
  width: 50px;
  height: 50px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 25px;
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
}

.work-type-content h2 {
  font-size: 22px;
  margin: 0 0 10px 0;
  display: flex;
  align-items: center;
  color: #ffffff;
}

.work-description {
  margin: 5px 0 0 0;
  color: rgba(255, 255, 255, 0.6);
  font-size: 14px;
  line-height: 1.5;
}

/* Update info panel layout */
.info-panel {
  display: flex;
  align-items: center;
  background: linear-gradient(rgba(60, 60, 60, 0.8), rgba(40, 40, 40, 0.7));
  border-radius: 12px;
  padding: 20px 30px;
  margin-top: auto;
  margin-bottom: 40px;
  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(100, 100, 100, 0.35);
  cursor: pointer;
  height: 70px;
}

.navigation {
  margin-top: 60px;
  display: flex;
  justify-content: space-between;
  flex-shrink: 0;
  position: relative;
  z-index: 2;
  padding-top: 40px;
}

.back-btn, .next-btn {
  padding: 12px 25px;
  border-radius: 30px;
  border: none;
  cursor: pointer;
  font-size: 15px;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 10px;
  transition: all 0.3s;
}

/* License card styles */
.license-card::after {
  content: '添加此许可证 →';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 34px;
  background-color: #000;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 13px;
  font-weight: 400;
  opacity: 0;
  transition: opacity 0.2s ease;
  z-index: 10;
  letter-spacing: 0.2px;
}

.license-card:hover::after {
  opacity: 1;
}

.license-card.selected::after {
  content: '移除此许可证 ×';
  background-color: #1a1a1a;
}

.license-tag {
  display: inline-flex;
  align-items: center;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 13px;
  font-weight: 500;
}

.license-tag.blue {
  background: rgba(0, 122, 255, 0.3);
  color: #7abbff;
}

.license-tag.purple {
  background: rgba(175, 82, 222, 0.3);
  color: #d699ff;
}

.license-tag.green {
  background: rgba(52, 199, 89, 0.3);
  color: #8dffbf;
}

.license-tag.red {
  background: rgba(255, 59, 48, 0.3);
  color: #ff8c85;
}

.license-icon {
  margin-right: 6px;
  font-style: normal;
}

.work-type-card:hover {
  background: linear-gradient(rgba(70, 70, 70, 0.85), rgba(50, 50, 50, 0.75));
  transform: translateY(-8px);
  box-shadow: 0 30px 30px rgba(0, 0, 0, 0.4);
  border-color: rgba(150, 150, 150, 0.5);
}

.work-type-card.selected {
  border: 1px solid rgba(150, 150, 150, 0.7);
  background: linear-gradient(rgba(80, 80, 80, 0.9), rgba(60, 60, 60, 0.8));
  transform: translateY(-8px);
  box-shadow: 0 30px 35px rgba(0, 0, 0, 0.4);
}

.work-type-icon.new-icon {
  background-color: #0066cc;
}

.work-type-icon.remix-icon {
  background-color: #009973;
}

.type-label {
  font-size: 12px;
  background-color: rgba(50, 50, 50, 0.6);
  padding: 3px 8px;
  border-radius: 15px;
  margin-left: 10px;
  font-weight: 400;
  color: rgba(255, 255, 255, 0.9);
}
</style> 